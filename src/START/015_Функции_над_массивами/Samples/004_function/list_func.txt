array_change_key_case — Меняет регистр всех ключей в массиве
array_chunk — Разбивает массив на части
array_column — Возвращает массив из значений одного столбца входного массива
array_combine — Создает новый массив, используя один массив в качестве ключей, а другой в качестве соответствующих значений
array_count_values — Подсчитывает количество всех значений массива
array_diff_assoc — Вычисляет расхождение массивов с дополнительной проверкой индекса
array_diff_key — Вычисляет расхождение массивов, сравнивая ключи
array_diff_uassoc — Вычисляет расхождение массивов с дополнительной проверкой индекса, осуществляемой при помощи callback-функции
array_diff_ukey — Вычисляет расхождение массивов, используя callback-функцию для сравнения ключей
array_diff — Вычислить расхождение массивов
array_fill_keys — Создает массив и заполняет его значениями, с определенными ключами
array_fill — Заполняет массив значениями
array_filter — Фильтрует элементы массива с помощью callback-функции
array_flip — Меняет местами ключи с их значениями в массиве
array_intersect_assoc — Вычисляет схождение массивов с дополнительной проверкой индекса
array_intersect_key — Вычислить пересечение массивов, сравнивая ключи
array_intersect_uassoc — Вычисляет схождение массивов с дополнительной проверкой индекса, осуществляемой при помощи callback-функции
array_intersect_ukey — Вычисляет схождение массивов, используя callback-функцию для сравнения ключей
array_intersect — Вычисляет схождение массивов
array_key_exists — Проверяет, присутствует ли в массиве указанный ключ или индекс
array_keys — Возвращает все или некоторое подмножество ключей массива
array_map — Применяет callback-функцию ко всем элементам указанных массивов
array_merge_recursive — Рекурсивное слияние двух или более массивов
array_merge — Сливает один или большее количество массивов
array_multisort — Сортирует несколько массивов или многомерные массивы
array_pad — Дополнить размер массива определенным значением до заданной величины
array_pop — Извлекает последний элемент массива
array_product — Вычислить произведение значений массива
array_push — Добавляет один или несколько элементов в конец массива
array_rand — Выбирает одно или несколько случайных значений из массива
array_reduce — Итеративно уменьшает массив к единственному значению, используя callback-функцию
array_replace_recursive — Рекурсивно заменяет элементы первого массива элементами переданных массивов
array_replace — Замена элементов массива элементами других переданных массивов
array_reverse — Возвращает массив с элементами в обратном порядке
array_search — Осуществляет поиск данного значения в массиве и возвращает ключ первого найденного элемента в случае удачи
array_shift — Извлекает первый элемент массива
array_slice — Выбирает срез массива
array_splice — Удаляет часть массива и заменяет её чем-нибудь ещё
array_sum — Вычисляет сумму значений массива
array_udiff_assoc — Вычисляет расхождение в массивах с дополнительной проверкой индексов, используя для сравнения значений callback-функцию
array_udiff_uassoc — Вычисляет расхождение в массивах с дополнительной проверкой индексов, используя для сравнения значений и индексов callback-функцию
array_udiff — Вычисляет расхождение массивов, используя для сравнения callback-функцию
array_uintersect_assoc — Вычисляет пересечение массивов с дополнительной проверкой индексов, используя для сравнения значений callback-функцию
array_uintersect_uassoc — Вычисляет пересечение массивов с дополнительной проверкой индекса, используя для сравнения индексов и значений индивидуальные callback-функции
array_uintersect — Вычисляет пересечение массивов, используя для сравнения значений callback-функцию
array_unique — Убирает повторяющиеся значения из массива
array_unshift — Добавляет один или несколько элементов в начало массива
array_values — Выбирает все значения массива
array_walk_recursive — Рекурсивно применяет пользовательскую функцию к каждому элементу массива
array_walk — Применяет заданную пользователем функцию к каждому элементу массива
array — Создает массив
arsort — Сортирует массив в обратном порядке, сохраняя ключи
asort — Сортирует массив, сохраняя ключи
compact — Создает массив, содержащий названия переменных и их значения
count — Подсчитывает количество элементов массива или что-то в объекте
current — Возвращает текущий элемент массива
each — Возвращает текущую пару ключ/значение из массива и смещает его указатель
end — Устанавливает внутренний указатель массива на его последний элемент
extract — Импортирует переменные из массива в текущую таблицу символов
in_array — Проверяет, присутствует ли в массиве значение
key_exists — Псевдоним array_key_exists
key — Выбирает ключ из массива
krsort — Сортирует массив по ключам в обратном порядке
ksort — Сортирует массив по ключам
list — Присваивает переменным из списка значения подобно массиву
natcasesort — Сортирует массив, используя алгоритм "natural order" без учета регистра символов
natsort — Сортирует массив, используя алгоритм "natural order"
next — Передвигает внутренний указатель массива на одну позицию вперёд
pos — Псевдоним current
prev — Передвигает внутренний указатель массива на одну позицию назад
range — Создает массив, содержащий диапазон элементов
reset — Устанавливает внутренний указатель массива на его первый элемент
rsort — Сортирует массив в обратном порядке
shuffle — Перемешивает массив
sizeof — Псевдоним count
sort — Сортирует массив
uasort — Сортирует массив, используя пользовательскую функцию для сравнения элементов с сохранением ключей
uksort — Сортирует массив по ключам, используя пользовательскую функцию для сравнения ключей
usort — Сортирует массив по значениям используя пользовательскую функцию для сравнения элементов